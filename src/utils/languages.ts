
export interface Language {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
}

export const languages: Language[] = [
  { code: 'en', name: 'English', nativeName: 'English', flag: 'üá¨üáß' },
  { code: 'hi', name: 'Hindi', nativeName: '‡§π‡§ø‡§Ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
];

export const translations = {
  en: {
    // Common UI Elements
    language: "Language",
    dashboard: "Dashboard",
    addExpense: "Add Expense",
    insights: "AI Insights",
    coach: "Finance Coach",
    budgetPlanner: "Budget Planner",
    savingsGoals: "Savings Goals",
    billReminder: "Bill Reminder",
    expenseChat: "Expense Chat",
    spendingLimits: "Spending Limits",
    gamification: "Save to Win",
    monthlyReport: "Monthly Report",
    smartSuggestions: "Smart Suggestions",
    
    // Dashboard
    yourFinancialCompanion: "Your intelligent financial companion with advanced features",
    selectMonth: "Select Month",
    totalBalance: "Total Balance",
    totalIncome: "Total Income",
    totalExpenses: "Total Expenses",
    monthlyIncome: "Monthly Income",
    monthlyExpenses: "Monthly Expenses",
    savingsRate: "Savings Rate",
    recentTransactions: "Recent Transactions",
    quickActions: "Quick Actions",
    financialVisualization: "Financial Visualization",
    thisMonth: "This month",
    incomeMinusExpenses: "Income - Expenses",
    
    // New Dashboard Features
    calendarTracker: "Calendar Tracker",
    advancedAnalytics: "Advanced Analytics",
    budgetProgress: "Budget Progress",
    moneyMonster: "Money Monster",
    aiSpendingCoach: "AI Spending Coach",
    geoHeatmap: "Geo Heatmap",
    billScanner: "Bill Scanner",
    voiceEntry: "Voice Entry",
    billReminders: "Bill Reminders",
    aiFinanceCoach: "AI Finance Coach",
    smartBudgetPlanner: "Smart Budget Planner",
    viewAIInsights: "View AI Insights",
    advancedVisualizer: "Advanced Visualizer",
    
    // Categories
    food: "Food",
    travel: "Travel",
    entertainment: "Entertainment",
    rent: "Rent",
    income: "Income",
    grocery: "Grocery",
    salary: "Salary",
    freelance: "Freelance",
    
    // Months
    january: "January",
    february: "February",
    march: "March",
    april: "April",
    may: "May",
    june: "June",
    july: "July",
    august: "August",
    september: "September",
    october: "October",
    november: "November",
    december: "December",
    
    // Actions
    save: "Save",
    cancel: "Cancel",
    edit: "Edit",
    delete: "Delete",
    back: "Back",
    
    // Splash Screen
    welcome: "Welcome to",
    smartBudgetAI: "SmartBudget AI",
    yourPersonalFinanceAssistant: "Your Personal Finance Assistant",
    getStarted: "Get Started",
    
    // Gamification
    points: "Points",
    level: "Level",
    streak: "Day Streak",
    badges: "Your Badges",
    challenges: "Today's Challenges",
    leaderboard: "Weekly Leaderboard",
    yourRank: "Your Rank",
    
    // AddExpense Component
    addTransaction: "Add Transaction",
    recordIncomeOrExpense: "Record your income or expense",
    transactionDetails: "Transaction Details",
    transactionType: "Transaction Type",
    selectType: "Select type",
    expense: "Expense",
    title: "Title",
    titlePlaceholder: "e.g., McDonald's, Salary, Rent",
    amount: "Amount",
    category: "Category",
    selectCategory: "Select category",
    date: "Date",
    pickDate: "Pick a date",
    saveTransaction: "Save Transaction",
    preview: "Preview",
    missingInformation: "Missing Information",
    fillAllFields: "Please fill in all fields to save the transaction.",
    invalidAmount: "Invalid Amount",
    enterValidAmount: "Please enter a valid positive amount.",
    transactionSaved: "Transaction Saved",
    transactionSavedDesc: "Transaction added successfully.",
    
    // Categories
    shopping: "Shopping",
    healthcare: "Healthcare",
    education: "Education",
    utilities: "Utilities",
    other: "Other",
    
    // Common phrases
    languageChanged: "Language Changed!",
    congratulations: "Congratulations!",
    newBadgeEarned: "New Badge Earned!",
    keepSaving: "Keep saving to climb higher!",
  },
  
  hi: {
    // Common UI Elements
    language: "‡§≠‡§æ‡§∑‡§æ",
    dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    addExpense: "‡§ñ‡§∞‡•ç‡§ö ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    insights: "AI ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø",
    coach: "‡§µ‡§ø‡§§‡•ç‡§§ ‡§ï‡•ã‡§ö",
    budgetPlanner: "‡§¨‡§ú‡§ü ‡§™‡•ç‡§≤‡§æ‡§®‡§∞",
    savingsGoals: "‡§¨‡§ö‡§§ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø",
    billReminder: "‡§¨‡§ø‡§≤ ‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞",
    expenseChat: "‡§ñ‡§∞‡•ç‡§ö ‡§ö‡•à‡§ü",
    spendingLimits: "‡§ñ‡§∞‡•ç‡§ö ‡§∏‡•Ä‡§Æ‡§æ",
    gamification: "‡§ú‡•Ä‡§§‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§ö‡§§",
    monthlyReport: "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü",
    smartSuggestions: "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§∏‡•Å‡§ù‡§æ‡§µ",
    
    // Dashboard
    yourFinancialCompanion: "‡§â‡§®‡•ç‡§®‡§§ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§™‡§ï‡§æ ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§æ‡§•‡•Ä",
    selectMonth: "‡§Æ‡§π‡•Ä‡§®‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç",
    totalBalance: "‡§ï‡•Å‡§≤ ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏",
    totalIncome: "‡§ï‡•Å‡§≤ ‡§Ü‡§Ø",
    totalExpenses: "‡§ï‡•Å‡§≤ ‡§ñ‡§∞‡•ç‡§ö",
    monthlyIncome: "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§Ü‡§Ø",
    monthlyExpenses: "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§ñ‡§∞‡•ç‡§ö",
    savingsRate: "‡§¨‡§ö‡§§ ‡§¶‡§∞",
    recentTransactions: "‡§π‡§æ‡§≤ ‡§ï‡•á ‡§≤‡•á‡§®‡§¶‡•á‡§®",
    quickActions: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ï‡§æ‡§∞‡•ç‡§Ø",
    financialVisualization: "‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§µ‡§ø‡§ú‡§º‡•Å‡§Ö‡§≤‡§æ‡§á‡§ú‡§º‡•á‡§∂‡§®",
    thisMonth: "‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á",
    incomeMinusExpenses: "‡§Ü‡§Ø - ‡§ñ‡§∞‡•ç‡§ö",
    
    // New Dashboard Features
    calendarTracker: "‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞ ‡§ü‡•ç‡§∞‡•à‡§ï‡§∞",
    advancedAnalytics: "‡§â‡§®‡•ç‡§®‡§§ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
    budgetProgress: "‡§¨‡§ú‡§ü ‡§™‡•ç‡§∞‡§ó‡§§‡§ø",
    moneyMonster: "‡§Æ‡§®‡•Ä ‡§Æ‡•â‡§®‡•ç‡§∏‡•ç‡§ü‡§∞",
    aiSpendingCoach: "AI ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡•ã‡§ö",
    geoHeatmap: "‡§≠‡•Ç ‡§π‡•Ä‡§ü‡§Æ‡•à‡§™",
    billScanner: "‡§¨‡§ø‡§≤ ‡§∏‡•ç‡§ï‡•à‡§®‡§∞",
    voiceEntry: "‡§Ü‡§µ‡§æ‡§ú‡§º ‡§è‡§Ç‡§ü‡•ç‡§∞‡•Ä",
    billReminders: "‡§¨‡§ø‡§≤ ‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞",
    aiFinanceCoach: "AI ‡§µ‡§ø‡§§‡•ç‡§§ ‡§ï‡•ã‡§ö",
    smartBudgetPlanner: "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§¨‡§ú‡§ü ‡§™‡•ç‡§≤‡§æ‡§®‡§∞",
    viewAIInsights: "AI ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø ‡§¶‡•á‡§ñ‡•á‡§Ç",
    advancedVisualizer: "‡§â‡§®‡•ç‡§®‡§§ ‡§µ‡§ø‡§ú‡§º‡•Å‡§Ö‡§≤‡§æ‡§á‡§ú‡§º‡§∞",
    
    // Categories
    food: "‡§≠‡•ã‡§ú‡§®",
    travel: "‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ",
    entertainment: "‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§®",
    rent: "‡§ï‡§ø‡§∞‡§æ‡§Ø‡§æ",
    income: "‡§Ü‡§Ø",
    grocery: "‡§ï‡§ø‡§∞‡§æ‡§®‡§æ",
    salary: "‡§∏‡•à‡§≤‡§∞‡•Ä",
    freelance: "‡§´‡•ç‡§∞‡•Ä‡§≤‡§æ‡§Ç‡§∏",
    
    // Months
    january: "‡§ú‡§®‡§µ‡§∞‡•Ä",
    february: "‡§´‡§∞‡§µ‡§∞‡•Ä",
    march: "‡§Æ‡§æ‡§∞‡•ç‡§ö",
    april: "‡§Ö‡§™‡•ç‡§∞‡•à‡§≤",
    may: "‡§Æ‡§à",
    june: "‡§ú‡•Ç‡§®",
    july: "‡§ú‡•Å‡§≤‡§æ‡§à",
    august: "‡§Ö‡§ó‡§∏‡•ç‡§§",
    september: "‡§∏‡§ø‡§§‡§Ç‡§¨‡§∞",
    october: "‡§Ö‡§ï‡•ç‡§ü‡•Ç‡§¨‡§∞",
    november: "‡§®‡§µ‡§Ç‡§¨‡§∞",
    december: "‡§¶‡§ø‡§∏‡§Ç‡§¨‡§∞",
    
    // Actions
    save: "‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç",
    cancel: "‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    edit: "‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
    delete: "‡§π‡§ü‡§æ‡§è‡§Ç",
    back: "‡§µ‡§æ‡§™‡§∏",
    
    // Splash Screen
    welcome: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
    smartBudgetAI: "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü‡§¨‡§ú‡§ü AI",
    yourPersonalFinanceAssistant: "‡§Ü‡§™‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§§‡•ç‡§§ ‡§∏‡§π‡§æ‡§Ø‡§ï",
    getStarted: "‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    
    // Gamification
    points: "‡§Ö‡§Ç‡§ï",
    level: "‡§∏‡•ç‡§§‡§∞",
    streak: "‡§¶‡§ø‡§® ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ï",
    badges: "‡§Ü‡§™‡§ï‡•á ‡§¨‡•à‡§ú",
    challenges: "‡§Ü‡§ú ‡§ï‡•Ä ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç",
    leaderboard: "‡§∏‡§æ‡§™‡•ç‡§§‡§æ‡§π‡§ø‡§ï ‡§≤‡•Ä‡§°‡§∞‡§¨‡•ã‡§∞‡•ç‡§°",
    yourRank: "‡§Ü‡§™‡§ï‡•Ä ‡§∞‡•à‡§Ç‡§ï",
    
    // AddExpense Component
    addTransaction: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    recordIncomeOrExpense: "‡§Ö‡§™‡§®‡•Ä ‡§Ü‡§Ø ‡§Ø‡§æ ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡§æ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç",
    transactionDetails: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§µ‡§ø‡§µ‡§∞‡§£",
    transactionType: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
    selectType: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç",
    expense: "‡§ñ‡§∞‡•ç‡§ö",
    title: "‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï",
    titlePlaceholder: "‡§ú‡•à‡§∏‡•á ‡§Æ‡•à‡§ï‡§°‡•ã‡§®‡§æ‡§≤‡•ç‡§°, ‡§∏‡•à‡§≤‡§∞‡•Ä, ‡§ï‡§ø‡§∞‡§æ‡§Ø‡§æ",
    amount: "‡§∞‡§æ‡§∂‡§ø",
    category: "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä",
    selectCategory: "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç",
    date: "‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï",
    pickDate: "‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç",
    saveTransaction: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç",
    preview: "‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®",
    missingInformation: "‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ó‡§æ‡§Ø‡§¨",
    fillAllFields: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§∏‡•á‡§µ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§≠‡•Ä ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§≠‡§∞‡•á‡§Ç‡•§",
    invalidAmount: "‡§ó‡§≤‡§§ ‡§∞‡§æ‡§∂‡§ø",
    enterValidAmount: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡•à‡§ß ‡§∏‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∞‡§æ‡§∂‡§ø ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§",
    transactionSaved: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§∏‡•á‡§µ ‡§π‡•ã ‡§ó‡§Ø‡§æ",
    transactionSavedDesc: "‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ú‡•ã‡§°‡§º ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ‡•§",
    
    // Categories
    shopping: "‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä",
    healthcare: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ",
    education: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
    utilities: "‡§â‡§™‡§Ø‡•ã‡§ó‡§ø‡§§‡§æ",
    other: "‡§Ö‡§®‡•ç‡§Ø",
    
    // Common phrases
    languageChanged: "‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤ ‡§ó‡§à!",
    congratulations: "‡§¨‡§ß‡§æ‡§à ‡§π‡•ã!",
    newBadgeEarned: "‡§®‡§Ø‡§æ ‡§¨‡•à‡§ú ‡§Æ‡§ø‡§≤‡§æ!",
    keepSaving: "‡§ä‡§™‡§∞ ‡§ö‡§¢‡§º‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§ö‡§§ ‡§ï‡§∞‡§§‡•á ‡§∞‡§π‡•á‡§Ç!",
  }
};

export const getTranslation = (key: string, language: string = 'en'): string => {
  const langTranslations = translations[language as keyof typeof translations] || translations.en;
  return langTranslations[key as keyof typeof langTranslations] || key;
};

// Helper function to get category translation
export const getCategoryTranslation = (category: string, language: string = 'en'): string => {
  const categoryMap: Record<string, string> = {
    'Food': 'food',
    'Travel': 'travel', 
    'Rent': 'rent',
    'Entertainment': 'entertainment',
    'Shopping': 'shopping',
    'Healthcare': 'healthcare',
    'Education': 'education',
    'Utilities': 'utilities',
    'Income': 'income',
    'Other': 'other',
    'Grocery': 'grocery',
    'Salary': 'salary',
    'Freelance': 'freelance',
    // Handle lowercase and existing category keys
    'food': 'food',
    'travel': 'travel',
    'rent': 'rent',
    'entertainment': 'entertainment',
    'shopping': 'shopping',
    'healthcare': 'healthcare',
    'education': 'education',
    'utilities': 'utilities',
    'income': 'income',
    'other': 'other',
    'grocery': 'grocery',
    'salary': 'salary',
    'freelance': 'freelance'
  };
  
  const translationKey = categoryMap[category] || 'other';
  return getTranslation(translationKey, language);
};
